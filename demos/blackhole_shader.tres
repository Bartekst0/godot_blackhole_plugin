[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
 
 
uniform float strength = 0.01;
uniform float black_radius = 0.75;
 
// Get direction and distance to the black hole center
 
void fragment(){
vec2 diff = vec2(0.5, 0.5) - vec2(UV.x, 1.0-UV.y);
float d = length(diff)*2.0;
vec2 dir = normalize(diff);
 
// This is a 0..1 value that will nullify the effect around the bounds of the effect,
float f = clamp(1.0-d, 0, 1.0);
 
// for a seamless transition between the effect\\'s area and the unaffected world pixels.
float shelf = smoothstep(0, 1, f);
 
// Calculate displacement amount
float displacement = strength / (d*d + 0.01);
 
// Calculate distorted screen-space texture coordinates
vec2 uv = SCREEN_UV + dir * (displacement * shelf);
 
// Output pixels from the screen using distorted UVs
vec4 col = texture(SCREEN_TEXTURE,uv);
 
COLOR.rgba = mix(col, vec4(0,0,0,1), smoothstep(black_radius-0.01, black_radius+0.01, f));
 
}"

[resource]
shader = SubResource( 1 )
shader_param/strength = 0.01
shader_param/black_radius = 0.75

